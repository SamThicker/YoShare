server:
  port: 9018

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true  #以IP注册进eureka,不以ID注册


file:
  rootDir:
    memberFile: /mydata/yoshare/memberFile/


spring:
  application:
    name: resource-service
  servlet:
    multipart:
      enabled: true #开启文件上传
      max-file-size: 10MB #限制文件上传大小为10M
  redis:
    host: localhost #Redis服务器地址
    database: 0 #Redis数据库索引（默认为0）
    port: 6379 #Redis服务器连接端口
    password: #Redis服务器连接密码（默认为空）
    jedis:
      pool:
        max-active: 8 #连接池最大连接数
        max-wait: -1ms #连接池最大阻塞等待时间
        max-idle: 8 #连接池中最大空闲连接
        min-idle: 0 #连接池中的最小空闲连接
    timeout: 3000ms #连接超时时间(毫秒)
  cloud:
    alibaba:
      seata:
        tx-service-group: my_test_tx_group
  datasource:
    url: jdbc:mysql://localhost:3306/yoshare
    username: root
    password: root
  rabbitmq:
    host: localhost
    port: 5672
    username: yoshare
    password: yoshare
#  cloud:
#    nacos:
#      discovery:
#        server-addr: 127.0.0.1:8848
  zipkin:
    base-url: http://localhost:9411

mybatis:
  mapper-locations:
    - classpath:dao/*.xml
    - classpath*:com/**/mapper/*.xml



management:
  endpoint:
    beans:
      enabled: true

ribbon:
  ConnectTimeout: 250 # 连接超时时间(ms)
  ReadTimeout: 2000 # 通信超时时间(ms)
  OkToRetryOnAllOperations: true # 是否对所有操作重试
  MaxAutoRetriesNextServer: 2 # 同一服务不同实例的重试次数
  MaxAutoRetries: 1 # 同一实例的重试次数
  #ribbon总超时时间为ribbonTimeout = (ribbonReadTimeout + ribbonConnectTimeout) *
  #(maxAutoRetries + 1) * (maxAutoRetriesNextServer + 1);

#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 13500 # 熔断超时时长：13500ms，不能少于ribbon总超时时间

hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: false
        isolation:
          strategy: SEMAPHORE

