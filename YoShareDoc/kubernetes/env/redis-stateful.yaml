apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-data-pv
  namespace: yoshare
spec:
  storageClassName: redis-data
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 100Mi
  hostPath:
    path: /mydata/redis/data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: redis-data
  name: redis-data-redis-0 #(volumeClaimTemplates.name)-(pod_name)
  namespace: yoshare
spec:
  storageClassName: redis-data
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: yoshare
  labels:
    app: redis
spec:
  replicas: 1
  serviceName: "mysql"
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - args:
            - redis-server
            - --appendonly
            - "yes"
          image: redis:3.2
          name: redis
          ports:
            - containerPort: 6379
              hostPort: 6379
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: redis-data
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "redis-data"
        resources:
          requests:
            storage: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: yoshare
  labels:
    app: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  clusterIP: None
  selector:
    app: redis
