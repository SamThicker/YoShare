<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.yo</groupId>
	<artifactId>yoshare</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>yoshare</name>
	<description></description>

	<packaging>pom</packaging>

	<properties>
		<!-- 工程配置 -->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<skipTests>true</skipTests>

		<!-- docker插件配置 -->
		<docker.host>https://106.52.238.179:2375</docker.host>
		<docker.maven.plugin.version>1.1.0</docker.maven.plugin.version>

		<!-- 依赖版本信息 -->
		    <!-- platform-bom spring项目依赖版本管理 -->
		<!--<platform-bom.version>Cairo-SR8</platform-bom.version>-->
		    <!-- SpringCloud相关 -->
		<spring-cloud.version>Hoxton.SR6</spring-cloud.version>
		<!--<eureka.version>2.2.3.RELEASE</eureka.version>
		<openfeign.version>2.2.3.RELEASE</openfeign.version>
		<zuul.version>2.2.3.RELEASE</zuul.version>
		<security.version>2.2.0.RELEASE</security.version>
		<spring.cloud.common.version>2.2.0.RELEASE</spring.cloud.common.version>-->
		    <!-- SpringBoot相关 -->
		<springboot.version>2.2.3.RELEASE</springboot.version>
		<springboot.maven.plugin.version>2.7.9</springboot.maven.plugin.version>
		    <!-- Spring相关 -->
		<spring-security-jwt.version>1.0.9.RELEASE</spring-security-jwt.version>
		<spring-data-commons.version>2.3.1.RELEASE</spring-data-commons.version>
		    <!-- MySQL & Mybatis -->
		<mysql-connector.version>8.0.15</mysql-connector.version>
		<druid.version>1.1.10</druid.version>
		<mybatis-spring-boot-starter.version>2.0.0</mybatis-spring-boot-starter.version>
		<pagehelper-starter.version>1.2.10</pagehelper-starter.version>
		<mybatis-generator.version>1.3.7</mybatis-generator.version>
            <!-- 工具类 -->
		<hibernate.validator.version>6.0.18.Final</hibernate.validator.version>
		<lombok.version>1.18.8</lombok.version>
		<hutool.version>4.5.7</hutool.version>
		<jjwt.version>0.9.0</jjwt.version>
		<swagger.version>2.7.0</swagger.version>
		<swagger-ui.version>2.7.0</swagger-ui.version>
		<swagger-annotations.version>1.5.13</swagger-annotations.version>
		<slf4j.version>1.7.30</slf4j.version>
		<fastjson.version>1.2.67</fastjson.version>
		<java.jwt.version>3.4.0</java.jwt.version>
		<comons.lang.version>3.12.0</comons.lang.version>
		<commons.email.version>1.5</commons.email.version>
            <!-- 中间件 -->
		<minio.version>7.0.1</minio.version>
		<aliyun-oss.version>2.5.0</aliyun-oss.version>
		<springboot.starter.redis.version>2.7.5</springboot.starter.redis.version>
		<springboot.starter.mongodb.version>3.4.5</springboot.starter.mongodb.version>
		<springboot.starter.elasticsearch.version>2.7.5</springboot.starter.elasticsearch.version>
		<springboot.starter.amqp.version>2.7.5</springboot.starter.amqp.version>
		<mongo.version>2.2.5.RELEASE</mongo.version>
		<seata.version>2.1.0.RELEASE</seata.version>
		<seata.all.version>1.2.0</seata.all.version>
		<commons.codec.version>1.11</commons.codec.version>
		<tika.version>1.12</tika.version>
		<google.http.version>1.34.2</google.http.version>
	</properties>

	<modules>
		<module>member-service</module>
		<module>group-service</module>
		<module>file-service</module>
		<module>resource-service</module>
		<module>note-service</module>
		<module>notification-service</module>
		<module>zuul-service</module>
		<module>yoshare-common</module>
		<module>yoshare-mbg</module>
		<module>security-service</module>
		<module>log-service</module>
		<module>feed-service</module>
		<module>eureka-server</module>
	</modules>

	<dependencies>
		<!--Swagger-UI API文档生产工具-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger-ui.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-annotations.version}</version>
		</dependency>

		<!-- 通用工具 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${comons.lang.version}</version>
		</dependency>
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>${hutool.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>
		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
			<version>${springboot.version}</version>
		</dependency>-->

		<!--SpringBoot通用依赖模块-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<!--排除自带的spring-boot-starter-logging-->
			<!--<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>-->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${springboot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${springboot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<version>${springboot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${springboot.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- 可以使用platform-bom管理spring项目中的依赖版本 -->
			<!--<dependency>
				<groupId>io.spring.platform</groupId>
				<artifactId>platform-bom</artifactId>
				<version>${platform-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>-->
			<!-- SpringCloud相关 -->
			    <!--使用spring-cloud-dependencies统一管理springCloud组件版本-->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			    <!--Eureka Server-->
			<!--<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
				<version>${eureka.version}</version>
			</dependency>
			    &lt;!&ndash;Eureka client&ndash;&gt;
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				<version>${eureka.version}</version>
			</dependency>
			    &lt;!&ndash;feign&ndash;&gt;
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-openfeign</artifactId>
				<version>${openfeign.version}</version>
			</dependency>
			    &lt;!&ndash;zuul&ndash;&gt;
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-zuul</artifactId>
				<version>${zuul.version}</version>
			</dependency>
			    &lt;!&ndash;security&ndash;&gt;
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-security</artifactId>
				<version>${security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-commons</artifactId>
				<version>${spring.cloud.common.version}</version>
			</dependency>-->

			<!-- Spring相关 -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-jwt</artifactId>
				<version>${spring-security-jwt.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-commons</artifactId>
				<version>${spring-data-commons.version}</version>
			</dependency>

			<!-- MySQL & Mybatis -->
			    <!--Mysql数据库驱动-->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector.version}</version>
			</dependency>
			    <!--集成druid连接池-->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid.version}</version>
			</dependency>
			    <!-- mybatis -->
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-spring-boot-starter.version}</version>
			</dependency>
			    <!--MyBatis分页插件-->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper-starter.version}</version>
			</dependency>
			    <!-- MyBatis 生成器 -->
			<dependency>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-core</artifactId>
				<version>${mybatis-generator.version}</version>
			</dependency>

			<!-- 工具类 -->
			    <!-- hibernate-validator -->
			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
			</dependency>
			    <!--lombok-->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			    <!--Hutool Java工具包-->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			    <!--JWT(Json Web Token)登录支持-->
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			    <!-- slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			    <!--oauth2-->
			<dependency>
				<groupId>com.auth0</groupId>
				<artifactId>java-jwt</artifactId>
				<version>${java.jwt.version}</version>
			</dependency>
			    <!--fastJson-->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			    <!--Swagger-UI API文档生产工具-->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${swagger-ui.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger-annotations.version}</version>
			</dependency>
			    <!-- commons-email -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-email</artifactId>
				<version>${commons.email.version}</version>
			</dependency>

			<!-- 中间件 -->
			    <!--minio-->
			<dependency>
				<groupId>io.minio</groupId>
				<artifactId>minio</artifactId>
				<version>${minio.version}</version>
			</dependency>
			    <!--redis-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-redis</artifactId>
				<version>${springboot.starter.redis.version}</version>
			</dependency>
			    <!--mongodb-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-mongodb</artifactId>
				<version>${mongo.version}</version>
			</dependency>
			    <!--elasticsearch-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
				<version>${springboot.starter.elasticsearch.version}</version>
			</dependency>
			    <!--amqp 适用rabbitmq-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-amqp</artifactId>
				<version>${spring-amqp.version}</version>
			</dependency>
			    <!--seata-->
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-seata</artifactId>
				<version>${seata.version}</version>
			</dependency>
			<dependency>
				<groupId>io.seata</groupId>
				<artifactId>seata-all</artifactId>
				<version>${seata.all.version}</version>
			</dependency>
			    <!-- commons-codec -->
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons.codec.version}</version>
			</dependency>
			    <!-- tika-core -->
			<dependency>
				<groupId>org.apache.tika</groupId>
				<artifactId>tika-core</artifactId>
				<version>${tika.version}</version>
			</dependency>
			    <!-- google http -->
			<dependency>
				<groupId>com.google.http-client</groupId>
				<artifactId>google-http-client</artifactId>
				<version>${google.http.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${springboot.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker.maven.plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<classifier>exec</classifier>
				</configuration>
			</plugin>

			<!--maven docker插件-->
			<!--<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				&lt;!&ndash;将插件绑定在某个phase执行&ndash;&gt;
				<executions>
					<execution>
						<id>buid-image</id>
						&lt;!&ndash;用户只需执行mvn package，自动执行mvn docker:build&ndash;&gt;
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					&lt;!&ndash;指定镜像名&ndash;&gt;
					<imageName>yoshare/${project.artifactId}:${project.version}</imageName>

					&lt;!&ndash;指定标签&ndash;&gt;
					<imageTags>
						<imageTag>latest</imageTag>
					</imageTags>

					&lt;!&ndash; Dockerfile的位置 &ndash;&gt;
					&lt;!&ndash;<dockerDirectory>src/main/docker</dockerDirectory>&ndash;&gt;

					&lt;!&ndash;指定基础镜像&ndash;&gt;
					<baseImage>java:8</baseImage>

					&lt;!&ndash;指定远程docker api地址&ndash;&gt;
					<dockerHost>${docker.host}</dockerHost>
					<dockerCertPath>/Users/yo/docker-ca</dockerCertPath>
					<entryPoint>
						["java", "-jar", "-Dspring.profiles.active=prod","/${project.build.finalName}.jar"]
					</entryPoint>

					&lt;!&ndash;复制jar包到docker容器指定目录&ndash;&gt;
					<resources>
						<resource>
							<targetPath>/</targetPath>
							&lt;!&ndash;jar包在项目中生成的路径，即对应的target目录&ndash;&gt;
							<directory>${project.build.directory}</directory>
							&lt;!&ndash;指定需要复制的文件&ndash;&gt;
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>-->
		</plugins>
	</build>
</project>